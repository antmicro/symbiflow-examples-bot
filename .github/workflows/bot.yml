name: bot

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Message of the bump commit'
        required: true
        default: '[BOT] Bump xc7 locks'
      user_name:
        description: 'Name of the user creating commit'
        required: true
        default: 'LOCK_UPDATING_BOT'
      user_email:
        description: 'Email address of the user creating commit'
        required: true
        default: '<>'

jobs:
  update-locks:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - { branch_name: 'update_locks', env_yml: 'xc7/environment.yml', conda_lock: 'xc7/conda.lock', pip_lock: 'xc7/pip.lock' }
    env:
      BOT_BRANCH:     ${{ matrix.branch_name }}_${{ github.run_id }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check environment
      run: |
        echo "::group::Check git"
        which git
        git --version
        echo "::endgroup::"
        echo "::group::Check conda"
        which conda
        conda -V
        echo
        echo "Packages in the current environment:"
        conda list
        echo "::endgroup::"
        echo "::group::Check python"
        which python3
        python3 -V
        echo
        echo "Python modules installed in pip:"
        python3 -m pip list
        echo "::endgroup::"

    - name: Create new branch
      run: |
        git checkout -b "$BOT_BRANCH"

    - name: Update Lock And Create Pull Request
      run: |
        python3 .github/scripts/bot.py
        echo $?
      env:
        BOT_ENV_NAME:   'bot_env'
        BOT_ENV_YML:    ${{ matrix.env_yml }}
        BOT_CONDA_LOCK: ${{ matrix.conda_lock }}
        BOT_PIP_LOCK:   ${{ matrix.pip_lock }}

    - name: Commit And Push Changes
      run: |
        git config user.name "$USER_NAME"
        git config user.email "$USER_EMAIL"
        git add "$BOT_CONDA_LOCK" "$BOT_PIP_LOCK"
        git commit -m "$COMMIT_MESSAGE"
        git push -u origin "$BOT_BRANCH"
      env:
        BOT_CONDA_LOCK: ${{ matrix.conda_lock }}
        BOT_PIP_LOCK:   ${{ matrix.pip_lock }}
        COMMIT_MESSAGE: ${{ github.event.inputs.commit_message }}
        USER_NAME:      ${{ github.event.inputs.user_name }}
        USER_EMAIL:     ${{ github.event.inputs.user_email }}

    - name: Create A Pull Request
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: ${{ matrix.branch_name }}_${{ github.run_id }},
            base: 'master',
          })
