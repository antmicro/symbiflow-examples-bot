name: update_conda_locks

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 3 * * *'

jobs:
  update-locks:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - { branch_name: 'update_xc7', env_yml: 'xc7/environment.yml', conda_lock: 'xc7/conda_lock.yml', pr_base: 'master', pr_prefix: '[BOT] Bump xc7 lock' }
          - { branch_name: 'update_eos-s3', env_yml: 'eos-s3/environment.yml', conda_lock: 'eos-s3/conda_lock.yml', pr_base: 'master', pr_prefix: '[BOT] Bump eos-s3 lock' }
    env:
      PR_BRANCH:  ${{ matrix.branch_name }}_${{ github.run_id }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules:  'recursive'
        ref:         ${{ matrix.pr_base }}

    - name: Push Updated Lock
      id: update-lock
      uses: antmicro/symbiflow-examples-bot/.github/conda_locking_bot@581804017703c9b08a131178cc3c5a9eb1c930d8
      with:
        branch_name:      ${{ env.PR_BRANCH }}
        environment_file: ${{ matrix.env_yml }}
        conda_lock_file:  ${{ matrix.conda_lock }}

    - name: Lock is Up To Date
      if: ${{ steps.update-lock.outputs.lock_up_to_date == 'true' }}
      run: echo "Conda Lock ${{ matrix.conda_lock }} is up to date!"

    - name: Set PR_TITLE with current UTC time
      if: ${{ steps.update-lock.outputs.lock_up_to_date == 'false' }}
      run: echo "PR_TITLE=${{ matrix.pr_prefix}} $(date -u +'%Y-%m-%d %H:%M %p %Z')" >> $GITHUB_ENV

    - name: Create a Pull Request
      if: ${{ steps.update-lock.outputs.lock_up_to_date == 'false' }}
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${{ env.PR_BRANCH }}`,
            base: `${{ matrix.pr_base }}`,
            title: `${{ env.PR_TITLE }}`,
          })
